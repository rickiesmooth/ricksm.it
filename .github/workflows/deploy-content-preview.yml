name: Deploy Preview

on:
  pull_request:
    paths:
      - 'content/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get Yarn Cache Directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Install
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        run: yarn install --frozen-lockfile

      - name: Build
        run: API_URL=https://api.ricksm.it/ npm run build

      - name: Strip file names
        run: find build/ -type f ! -iname 'index.html' -iname '*.html' -print0 | while read -d $'\0' f; do mv "$f" "${f%.html}"; done

      - name: Sync With S3
        if: success()
        run: |
          aws s3 sync build/ s3://${{steps.cf-outputs.outputs.DeployBucket}}/preview/${{ github.event.number }} --content-type text/html --exclude "assets/**" --delete &&
          aws s3 sync build/assets s3://${{steps.cf-outputs.outputs.DeployBucket}}/preview/${{ github.event.number }}/assets

      - name: Invalidate cache
        if: success()
        run: aws cloudfront create-invalidation --distribution-id ${{steps.cf-outputs.outputs.Distribution}} --paths /

      - name: Set Deployment Status Success
        if: success()
        uses: pbrandone/create-status-action@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          state: success
          description: Deploy preview ready!
          url: http://${{ github.event.number }}.preview.ricksm.it
          context: Deploy Preview URL
